/*
 * generated by Xtext 2.15.0
 */
grammar InternalDaogen2;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package org.xtext.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.xtext.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.xtext.services.Daogen2GrammarAccess;

}
@parser::members {
	private Daogen2GrammarAccess grammarAccess;

	public void setGrammarAccess(Daogen2GrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleDaogen
entryRuleDaogen
:
{ before(grammarAccess.getDaogenRule()); }
	 ruleDaogen
{ after(grammarAccess.getDaogenRule()); } 
	 EOF 
;

// Rule Daogen
ruleDaogen 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDaogenAccess().getElementsAssignment()); }
		(rule__Daogen__ElementsAssignment)*
		{ after(grammarAccess.getDaogenAccess().getElementsAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleType
entryRuleType
:
{ before(grammarAccess.getTypeRule()); }
	 ruleType
{ after(grammarAccess.getTypeRule()); } 
	 EOF 
;

// Rule Type
ruleType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeAccess().getAlternatives()); }
		(rule__Type__Alternatives)
		{ after(grammarAccess.getTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDataType
entryRuleDataType
:
{ before(grammarAccess.getDataTypeRule()); }
	 ruleDataType
{ after(grammarAccess.getDataTypeRule()); } 
	 EOF 
;

// Rule DataType
ruleDataType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDataTypeAccess().getGroup()); }
		(rule__DataType__Group__0)
		{ after(grammarAccess.getDataTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleClasse
entryRuleClasse
:
{ before(grammarAccess.getClasseRule()); }
	 ruleClasse
{ after(grammarAccess.getClasseRule()); } 
	 EOF 
;

// Rule Classe
ruleClasse 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getClasseAccess().getGroup()); }
		(rule__Classe__Group__0)
		{ after(grammarAccess.getClasseAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFeature
entryRuleFeature
:
{ before(grammarAccess.getFeatureRule()); }
	 ruleFeature
{ after(grammarAccess.getFeatureRule()); } 
	 EOF 
;

// Rule Feature
ruleFeature 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFeatureAccess().getAlternatives()); }
		(rule__Feature__Alternatives)
		{ after(grammarAccess.getFeatureAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAtributo
entryRuleAtributo
:
{ before(grammarAccess.getAtributoRule()); }
	 ruleAtributo
{ after(grammarAccess.getAtributoRule()); } 
	 EOF 
;

// Rule Atributo
ruleAtributo 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAtributoAccess().getGroup()); }
		(rule__Atributo__Group__0)
		{ after(grammarAccess.getAtributoAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInsertCode
entryRuleInsertCode
:
{ before(grammarAccess.getInsertCodeRule()); }
	 ruleInsertCode
{ after(grammarAccess.getInsertCodeRule()); } 
	 EOF 
;

// Rule InsertCode
ruleInsertCode 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInsertCodeAccess().getGroup()); }
		(rule__InsertCode__Group__0)
		{ after(grammarAccess.getInsertCodeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleParametro
entryRuleParametro
:
{ before(grammarAccess.getParametroRule()); }
	 ruleParametro
{ after(grammarAccess.getParametroRule()); } 
	 EOF 
;

// Rule Parametro
ruleParametro 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getParametroAccess().getAlternatives()); }
		(rule__Parametro__Alternatives)
		{ after(grammarAccess.getParametroAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInserirObjeto
entryRuleInserirObjeto
:
{ before(grammarAccess.getInserirObjetoRule()); }
	 ruleInserirObjeto
{ after(grammarAccess.getInserirObjetoRule()); } 
	 EOF 
;

// Rule InserirObjeto
ruleInserirObjeto 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInserirObjetoAccess().getGroup()); }
		(rule__InserirObjeto__Group__0)
		{ after(grammarAccess.getInserirObjetoAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBuscarObjeto
entryRuleBuscarObjeto
:
{ before(grammarAccess.getBuscarObjetoRule()); }
	 ruleBuscarObjeto
{ after(grammarAccess.getBuscarObjetoRule()); } 
	 EOF 
;

// Rule BuscarObjeto
ruleBuscarObjeto 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBuscarObjetoAccess().getGroup()); }
		(rule__BuscarObjeto__Group__0)
		{ after(grammarAccess.getBuscarObjetoAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleListarObjeto
entryRuleListarObjeto
:
{ before(grammarAccess.getListarObjetoRule()); }
	 ruleListarObjeto
{ after(grammarAccess.getListarObjetoRule()); } 
	 EOF 
;

// Rule ListarObjeto
ruleListarObjeto 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getListarObjetoAccess().getGroup()); }
		(rule__ListarObjeto__Group__0)
		{ after(grammarAccess.getListarObjetoAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRemoverObjeto
entryRuleRemoverObjeto
:
{ before(grammarAccess.getRemoverObjetoRule()); }
	 ruleRemoverObjeto
{ after(grammarAccess.getRemoverObjetoRule()); } 
	 EOF 
;

// Rule RemoverObjeto
ruleRemoverObjeto 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRemoverObjetoAccess().getGroup()); }
		(rule__RemoverObjeto__Group__0)
		{ after(grammarAccess.getRemoverObjetoAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAtualizarObjeto
entryRuleAtualizarObjeto
:
{ before(grammarAccess.getAtualizarObjetoRule()); }
	 ruleAtualizarObjeto
{ after(grammarAccess.getAtualizarObjetoRule()); } 
	 EOF 
;

// Rule AtualizarObjeto
ruleAtualizarObjeto 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAtualizarObjetoAccess().getGroup()); }
		(rule__AtualizarObjeto__Group__0)
		{ after(grammarAccess.getAtualizarObjetoAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDeletarTabela
entryRuleDeletarTabela
:
{ before(grammarAccess.getDeletarTabelaRule()); }
	 ruleDeletarTabela
{ after(grammarAccess.getDeletarTabelaRule()); } 
	 EOF 
;

// Rule DeletarTabela
ruleDeletarTabela 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDeletarTabelaAccess().getGroup()); }
		(rule__DeletarTabela__Group__0)
		{ after(grammarAccess.getDeletarTabelaAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeAccess().getDataTypeParserRuleCall_0()); }
		ruleDataType
		{ after(grammarAccess.getTypeAccess().getDataTypeParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getClasseParserRuleCall_1()); }
		ruleClasse
		{ after(grammarAccess.getTypeAccess().getClasseParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFeatureAccess().getAtributoParserRuleCall_0()); }
		ruleAtributo
		{ after(grammarAccess.getFeatureAccess().getAtributoParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getFeatureAccess().getInsertCodeParserRuleCall_1()); }
		ruleInsertCode
		{ after(grammarAccess.getFeatureAccess().getInsertCodeParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parametro__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParametroAccess().getInserirObjetoParserRuleCall_0()); }
		ruleInserirObjeto
		{ after(grammarAccess.getParametroAccess().getInserirObjetoParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getParametroAccess().getBuscarObjetoParserRuleCall_1()); }
		ruleBuscarObjeto
		{ after(grammarAccess.getParametroAccess().getBuscarObjetoParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getParametroAccess().getListarObjetoParserRuleCall_2()); }
		ruleListarObjeto
		{ after(grammarAccess.getParametroAccess().getListarObjetoParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getParametroAccess().getRemoverObjetoParserRuleCall_3()); }
		ruleRemoverObjeto
		{ after(grammarAccess.getParametroAccess().getRemoverObjetoParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getParametroAccess().getAtualizarObjetoParserRuleCall_4()); }
		ruleAtualizarObjeto
		{ after(grammarAccess.getParametroAccess().getAtualizarObjetoParserRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getParametroAccess().getDeletarTabelaParserRuleCall_5()); }
		ruleDeletarTabela
		{ after(grammarAccess.getParametroAccess().getDeletarTabelaParserRuleCall_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataType__Group__0__Impl
	rule__DataType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataTypeAccess().getDatatypeKeyword_0()); }
	'datatype'
	{ after(grammarAccess.getDataTypeAccess().getDatatypeKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataType__Group__1__Impl
	rule__DataType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataTypeAccess().getNameAssignment_1()); }
	(rule__DataType__NameAssignment_1)
	{ after(grammarAccess.getDataTypeAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataType__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataTypeAccess().getSemicolonKeyword_2()); }
	';'
	{ after(grammarAccess.getDataTypeAccess().getSemicolonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Classe__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Classe__Group__0__Impl
	rule__Classe__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Classe__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClasseAccess().getClassKeyword_0()); }
	'class'
	{ after(grammarAccess.getClasseAccess().getClassKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Classe__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Classe__Group__1__Impl
	rule__Classe__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Classe__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClasseAccess().getNameAssignment_1()); }
	(rule__Classe__NameAssignment_1)
	{ after(grammarAccess.getClasseAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Classe__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Classe__Group__2__Impl
	rule__Classe__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Classe__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClasseAccess().getGroup_2()); }
	(rule__Classe__Group_2__0)?
	{ after(grammarAccess.getClasseAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Classe__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Classe__Group__3__Impl
	rule__Classe__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Classe__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClasseAccess().getLeftCurlyBracketKeyword_3()); }
	'{'
	{ after(grammarAccess.getClasseAccess().getLeftCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Classe__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Classe__Group__4__Impl
	rule__Classe__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Classe__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClasseAccess().getFeaturesAssignment_4()); }
	(rule__Classe__FeaturesAssignment_4)*
	{ after(grammarAccess.getClasseAccess().getFeaturesAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Classe__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Classe__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Classe__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClasseAccess().getRightCurlyBracketKeyword_5()); }
	'}'
	{ after(grammarAccess.getClasseAccess().getRightCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Classe__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Classe__Group_2__0__Impl
	rule__Classe__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Classe__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClasseAccess().getExtendsKeyword_2_0()); }
	'extends'
	{ after(grammarAccess.getClasseAccess().getExtendsKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Classe__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Classe__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Classe__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClasseAccess().getSuperTypeAssignment_2_1()); }
	(rule__Classe__SuperTypeAssignment_2_1)
	{ after(grammarAccess.getClasseAccess().getSuperTypeAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Atributo__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atributo__Group__0__Impl
	rule__Atributo__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Atributo__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtributoAccess().getPrivateKeyword_0()); }
	'private'
	{ after(grammarAccess.getAtributoAccess().getPrivateKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atributo__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atributo__Group__1__Impl
	rule__Atributo__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Atributo__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtributoAccess().getTypeAssignment_1()); }
	(rule__Atributo__TypeAssignment_1)
	{ after(grammarAccess.getAtributoAccess().getTypeAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atributo__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atributo__Group__2__Impl
	rule__Atributo__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Atributo__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtributoAccess().getNameAssignment_2()); }
	(rule__Atributo__NameAssignment_2)
	{ after(grammarAccess.getAtributoAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atributo__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atributo__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Atributo__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtributoAccess().getSemicolonKeyword_3()); }
	';'
	{ after(grammarAccess.getAtributoAccess().getSemicolonKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__InsertCode__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InsertCode__Group__0__Impl
	rule__InsertCode__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InsertCode__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInsertCodeAccess().getInsertCodeKeyword_0()); }
	'insertCode'
	{ after(grammarAccess.getInsertCodeAccess().getInsertCodeKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InsertCode__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InsertCode__Group__1__Impl
	rule__InsertCode__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InsertCode__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInsertCodeAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getInsertCodeAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InsertCode__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InsertCode__Group__2__Impl
	rule__InsertCode__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__InsertCode__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInsertCodeAccess().getParametroAssignment_2()); }
	(rule__InsertCode__ParametroAssignment_2)
	{ after(grammarAccess.getInsertCodeAccess().getParametroAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InsertCode__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InsertCode__Group__3__Impl
	rule__InsertCode__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__InsertCode__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInsertCodeAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getInsertCodeAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InsertCode__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InsertCode__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InsertCode__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInsertCodeAccess().getSemicolonKeyword_4()); }
	';'
	{ after(grammarAccess.getInsertCodeAccess().getSemicolonKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__InserirObjeto__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InserirObjeto__Group__0__Impl
	rule__InserirObjeto__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InserirObjeto__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInserirObjetoAccess().getInserirObjetoAction_0()); }
	()
	{ after(grammarAccess.getInserirObjetoAccess().getInserirObjetoAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InserirObjeto__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InserirObjeto__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InserirObjeto__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInserirObjetoAccess().getInserir_objetoKeyword_1()); }
	'inserir_objeto'
	{ after(grammarAccess.getInserirObjetoAccess().getInserir_objetoKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BuscarObjeto__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BuscarObjeto__Group__0__Impl
	rule__BuscarObjeto__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BuscarObjeto__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBuscarObjetoAccess().getBuscar_objetoKeyword_0()); }
	'buscar_objeto,'
	{ after(grammarAccess.getBuscarObjetoAccess().getBuscar_objetoKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BuscarObjeto__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BuscarObjeto__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BuscarObjeto__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBuscarObjetoAccess().getAtrAssignment_1()); }
	(rule__BuscarObjeto__AtrAssignment_1)
	{ after(grammarAccess.getBuscarObjetoAccess().getAtrAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ListarObjeto__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListarObjeto__Group__0__Impl
	rule__ListarObjeto__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ListarObjeto__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListarObjetoAccess().getListarObjetoAction_0()); }
	()
	{ after(grammarAccess.getListarObjetoAccess().getListarObjetoAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListarObjeto__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListarObjeto__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ListarObjeto__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListarObjetoAccess().getListar_objetoKeyword_1()); }
	'listar_objeto'
	{ after(grammarAccess.getListarObjetoAccess().getListar_objetoKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RemoverObjeto__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RemoverObjeto__Group__0__Impl
	rule__RemoverObjeto__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RemoverObjeto__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRemoverObjetoAccess().getRemover_objetoKeyword_0()); }
	'remover_objeto,'
	{ after(grammarAccess.getRemoverObjetoAccess().getRemover_objetoKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RemoverObjeto__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RemoverObjeto__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RemoverObjeto__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRemoverObjetoAccess().getAtrAssignment_1()); }
	(rule__RemoverObjeto__AtrAssignment_1)
	{ after(grammarAccess.getRemoverObjetoAccess().getAtrAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AtualizarObjeto__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AtualizarObjeto__Group__0__Impl
	rule__AtualizarObjeto__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AtualizarObjeto__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtualizarObjetoAccess().getAtualizar_objetoKeyword_0()); }
	'atualizar_objeto,'
	{ after(grammarAccess.getAtualizarObjetoAccess().getAtualizar_objetoKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AtualizarObjeto__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AtualizarObjeto__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AtualizarObjeto__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtualizarObjetoAccess().getAtrAssignment_1()); }
	(rule__AtualizarObjeto__AtrAssignment_1)
	{ after(grammarAccess.getAtualizarObjetoAccess().getAtrAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DeletarTabela__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DeletarTabela__Group__0__Impl
	rule__DeletarTabela__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DeletarTabela__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeletarTabelaAccess().getDeletarTabelaAction_0()); }
	()
	{ after(grammarAccess.getDeletarTabelaAccess().getDeletarTabelaAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeletarTabela__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DeletarTabela__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DeletarTabela__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeletarTabelaAccess().getDeletar_tabelaKeyword_1()); }
	'deletar_tabela'
	{ after(grammarAccess.getDeletarTabelaAccess().getDeletar_tabelaKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Daogen__ElementsAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDaogenAccess().getElementsTypeParserRuleCall_0()); }
		ruleType
		{ after(grammarAccess.getDaogenAccess().getElementsTypeParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataTypeAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getDataTypeAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Classe__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClasseAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getClasseAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Classe__SuperTypeAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClasseAccess().getSuperTypeClasseCrossReference_2_1_0()); }
		(
			{ before(grammarAccess.getClasseAccess().getSuperTypeClasseIDTerminalRuleCall_2_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getClasseAccess().getSuperTypeClasseIDTerminalRuleCall_2_1_0_1()); }
		)
		{ after(grammarAccess.getClasseAccess().getSuperTypeClasseCrossReference_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Classe__FeaturesAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClasseAccess().getFeaturesFeatureParserRuleCall_4_0()); }
		ruleFeature
		{ after(grammarAccess.getClasseAccess().getFeaturesFeatureParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atributo__TypeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtributoAccess().getTypeTypeCrossReference_1_0()); }
		(
			{ before(grammarAccess.getAtributoAccess().getTypeTypeIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getAtributoAccess().getTypeTypeIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getAtributoAccess().getTypeTypeCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atributo__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtributoAccess().getNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getAtributoAccess().getNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InsertCode__ParametroAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInsertCodeAccess().getParametroParametroParserRuleCall_2_0()); }
		ruleParametro
		{ after(grammarAccess.getInsertCodeAccess().getParametroParametroParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BuscarObjeto__AtrAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBuscarObjetoAccess().getAtrAtributoCrossReference_1_0()); }
		(
			{ before(grammarAccess.getBuscarObjetoAccess().getAtrAtributoIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getBuscarObjetoAccess().getAtrAtributoIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getBuscarObjetoAccess().getAtrAtributoCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RemoverObjeto__AtrAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRemoverObjetoAccess().getAtrAtributoCrossReference_1_0()); }
		(
			{ before(grammarAccess.getRemoverObjetoAccess().getAtrAtributoIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getRemoverObjetoAccess().getAtrAtributoIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getRemoverObjetoAccess().getAtrAtributoCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AtualizarObjeto__AtrAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtualizarObjetoAccess().getAtrAtributoCrossReference_1_0()); }
		(
			{ before(grammarAccess.getAtualizarObjetoAccess().getAtrAtributoIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getAtualizarObjetoAccess().getAtrAtributoIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getAtualizarObjetoAccess().getAtrAtributoCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
